// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WaitingRelease Snapshot Test renders the WaitingRelease component correctly 1`] = `
<View
  style={
    [
      {
        "flex": 1,
        "gap": 9.44759206798867,
      },
    ]
  }
>
  <View
    style={
      [
        {
          "flexDirection": "row",
          "height": 94.47592067988668,
          "paddingHorizontal": 30,
        },
        {
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 4,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 3.84,
        },
        {
          "backgroundColor": "#F9FBFF",
        },
      ]
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    />
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "#000000",
              "fontSize": 36,
              "fontWeight": undefined,
              "padding": 0,
            },
            undefined,
            {
              "width": "auto",
            },
          ]
        }
      >
        Phát Hành
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "flex-end",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={20}
        bbWidth={20}
        fill="none"
        focusable={false}
        height={20}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 20,
              "width": 20,
            },
          ]
        }
        vbHeight={20}
        vbWidth={20}
        width={20}
        xml="<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M19 19L14.7501 14.7425L19 19ZM17.1053 9.05263C17.1053 11.1883 16.2569 13.2365 14.7467 14.7467C13.2365 16.2569 11.1883 17.1053 9.05263 17.1053C6.91694 17.1053 4.86872 16.2569 3.35856 14.7467C1.8484 13.2365 1 11.1883 1 9.05263C1 6.91694 1.8484 4.86872 3.35856 3.35856C4.86872 1.8484 6.91694 1 9.05263 1C11.1883 1 13.2365 1.8484 14.7467 3.35856C16.2569 4.86872 17.1053 6.91694 17.1053 9.05263V9.05263Z" stroke="#6A6A6A" stroke-width="1.5" stroke-linecap="round"/>
</svg>
"
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="M19 19L14.7501 14.7425L19 19ZM17.1053 9.05263C17.1053 11.1883 16.2569 13.2365 14.7467 14.7467C13.2365 16.2569 11.1883 17.1053 9.05263 17.1053C6.91694 17.1053 4.86872 16.2569 3.35856 14.7467C1.8484 13.2365 1 11.1883 1 9.05263C1 6.91694 1.8484 4.86872 3.35856 3.35856C4.86872 1.8484 6.91694 1 9.05263 1C11.1883 1 13.2365 1.8484 14.7467 3.35856C16.2569 4.86872 17.1053 6.91694 17.1053 9.05263V9.05263Z"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
              ]
            }
            stroke={
              {
                "payload": 4285164138,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeWidth={1.5}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <View
    style={
      {
        "gap": 9.44759206798867,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        [
          {
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 4,
              "width": 0,
            },
            "shadowOpacity": 0.1,
            "shadowRadius": 3.84,
          },
          {
            "backgroundColor": "#F9FBFF",
            "paddingHorizontal": 30,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
              "gap": 20,
              "paddingVertical": 18.89518413597734,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F9FBFF",
              "borderColor": "#02C277",
              "borderRadius": 5,
              "borderWidth": 1,
              "flexDirection": "row",
              "gap": 12,
              "justifyContent": "flex-start",
              "opacity": 1,
              "paddingHorizontal": 26,
              "paddingVertical": 18.89518413597734,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={20}
            bbWidth={20}
            fill="#000000"
            focusable={false}
            height={20}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "height": 30,
                  "width": 30,
                },
                {
                  "flex": 0,
                  "height": 20,
                  "width": 20,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width={20}
            xml="<?xml version="1.0" encoding="utf-8"?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->
<svg fill="#000000" width="20" height="20" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M11,4.5a1,1,0,0,1,1-1h9a1,1,0,0,1,0,2H12A1,1,0,0,1,11,4.5Zm1,6h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2Zm0,5h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2Zm0,5h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2ZM6,2A1,1,0,0,0,5,3V18.586L3.707,17.293a1,1,0,0,0-1.414,1.414l3,3a1,1,0,0,0,1.416,0l3-3a1,1,0,0,0-1.414-1.414L7,18.586V3A1,1,0,0,0,6,2Z"/></svg>"
            xmlns="http://www.w3.org/2000/svg"
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                d="M11,4.5a1,1,0,0,1,1-1h9a1,1,0,0,1,0,2H12A1,1,0,0,1,11,4.5Zm1,6h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2Zm0,5h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2Zm0,5h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2ZM6,2A1,1,0,0,0,5,3V18.586L3.707,17.293a1,1,0,0,0-1.414,1.414l3,3a1,1,0,0,0,1.416,0l3-3a1,1,0,0,0-1.414-1.414L7,18.586V3A1,1,0,0,0,6,2Z"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
          <Text
            style={
              [
                {
                  "color": "#000000",
                  "fontSize": 28,
                  "fontWeight": undefined,
                  "padding": 0,
                },
                undefined,
                {
                  "width": "auto",
                },
              ]
            }
          >
            Sắp xếp
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#F9FBFF",
              "borderColor": "#02C277",
              "borderRadius": 5,
              "borderWidth": 1,
              "flexDirection": "row",
              "gap": 12,
              "justifyContent": "flex-start",
              "opacity": 1,
              "paddingHorizontal": 26,
              "paddingVertical": 18.89518413597734,
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={20}
            bbWidth={20}
            fill="#000000"
            focusable={false}
            height={20}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "height": 30,
                  "width": 30,
                },
                {
                  "flex": 0,
                  "height": 20,
                  "width": 20,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width={20}
            xml="<?xml version="1.0" encoding="utf-8"?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->
<svg fill="#000000" width="20" height="20" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M11,4.5a1,1,0,0,1,1-1h9a1,1,0,0,1,0,2H12A1,1,0,0,1,11,4.5Zm1,6h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2Zm0,5h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2Zm0,5h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2ZM6,2A1,1,0,0,0,5,3V18.586L3.707,17.293a1,1,0,0,0-1.414,1.414l3,3a1,1,0,0,0,1.416,0l3-3a1,1,0,0,0-1.414-1.414L7,18.586V3A1,1,0,0,0,6,2Z"/></svg>"
            xmlns="http://www.w3.org/2000/svg"
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                d="M11,4.5a1,1,0,0,1,1-1h9a1,1,0,0,1,0,2H12A1,1,0,0,1,11,4.5Zm1,6h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2Zm0,5h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2Zm0,5h9a1,1,0,0,0,0-2H12a1,1,0,0,0,0,2ZM6,2A1,1,0,0,0,5,3V18.586L3.707,17.293a1,1,0,0,0-1.414,1.414l3,3a1,1,0,0,0,1.416,0l3-3a1,1,0,0,0-1.414-1.414L7,18.586V3A1,1,0,0,0,6,2Z"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
          <Text
            style={
              [
                {
                  "color": "#000000",
                  "fontSize": 28,
                  "fontWeight": undefined,
                  "padding": 0,
                },
                undefined,
                {
                  "width": "auto",
                },
              ]
            }
          >
            Lọc
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "borderRadius": 99,
            "height": 85.02832861189802,
            "marginHorizontal": 30,
          },
          {
            "backgroundColor": "#C7C8CC",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        collapsable={false}
        jestAnimatedStyle={
          {
            "value": {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          }
        }
        style={
          {
            "backgroundColor": "#E5F1FF",
            "borderRadius": 99,
            "bottom": 0,
            "height": 73.69121813031161,
            "left": 6,
            "marginVertical": 5.668555240793201,
            "position": "absolute",
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 4,
              "width": 0,
            },
            "shadowOpacity": 0.1,
            "shadowRadius": 3.84,
            "transform": [
              {
                "translateX": 0,
              },
            ],
            "width": 217.33333333333334,
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "gap": 0,
            "height": "100%",
            "paddingVertical": 3,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "gray",
              "borderRadius": 99,
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginHorizontal": 6,
              "opacity": 1,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              [
                {
                  "color": "#2F2F2F",
                  "fontSize": 56,
                  "fontWeight": "700",
                  "padding": 0,
                },
                undefined,
                {
                  "width": "auto",
                },
              ]
            }
          >
            Đang mở
          </Text>
        </View>
        <View
          style={
            {
              "backgroundColor": "black",
              "height": "60%",
              "width": 1,
            }
          }
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "gray",
              "borderRadius": 99,
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginHorizontal": 6,
              "opacity": 1,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              [
                {
                  "color": "#F9FBFF",
                  "fontSize": 56,
                  "fontWeight": "700",
                  "padding": 0,
                },
                undefined,
                {
                  "width": "auto",
                },
              ]
            }
          >
            Sắp mở
          </Text>
        </View>
        <View
          style={
            {
              "backgroundColor": "black",
              "height": "60%",
              "width": 1,
            }
          }
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "gray",
              "borderRadius": 99,
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginHorizontal": 6,
              "opacity": 1,
              "paddingHorizontal": 0,
            }
          }
        >
          <Text
            style={
              [
                {
                  "color": "#F9FBFF",
                  "fontSize": 56,
                  "fontWeight": "700",
                  "padding": 0,
                },
                undefined,
                {
                  "width": "auto",
                },
              ]
            }
          >
            Kết thúc
          </Text>
        </View>
      </View>
    </View>
    <View>
      <RCTScrollView
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        stickyHeaderIndices={[]}
        style={
          [
            {
              "paddingHorizontal": 30,
            },
            {
              "height": 1002.2294617563739,
              "paddingTop": 9.44759206798867,
            },
          ]
        }
        viewabilityConfigCallbackPairs={[]}
      >
        <RCTRefreshControl />
        <View />
      </RCTScrollView>
    </View>
  </View>
</View>
`;
